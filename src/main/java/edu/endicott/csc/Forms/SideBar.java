/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.endicott.csc.Forms;

import edu.endicott.csc.finalproject.*;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Random;

/**
 *
 * @author cesar
 */
public class SideBar extends javax.swing.JPanel {
    private Controller controller;
    
    /**
     * Creates new form SideBar
     */
    public SideBar() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfSearch = new javax.swing.JTextField();
        lblSideOption2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));

        jtfSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfSearch.setForeground(new java.awt.Color(153, 153, 153));
        jtfSearch.setText("Search:");
        jtfSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfSearchFocusLost(evt);
            }
        });
        jtfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfSearchKeyPressed(evt);
            }
        });

        lblSideOption2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSideOption2.setForeground(new java.awt.Color(255, 255, 255));
        lblSideOption2.setText("Random Game");
        lblSideOption2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSideOption2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSideOption2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSideOption2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSideOption2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSideOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(864, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void cleanSearchBar() {
        jtfSearch.setText("Search:");
        jtfSearch.setForeground(new Color(153, 153, 153));
    }
    
    private void jtfSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSearchFocusGained
        if(jtfSearch.getText().equals("Search:")) {
            jtfSearch.setText("");
            jtfSearch.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jtfSearchFocusGained

    private void jtfSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSearchFocusLost
        if(jtfSearch.getText().equals("")) {
            jtfSearch.setText("Search:");
            jtfSearch.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_jtfSearchFocusLost

    private void lblSideOption2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSideOption2MouseEntered
        lblSideOption2.setForeground(new Color(0, 255, 255));
    }//GEN-LAST:event_lblSideOption2MouseEntered

    private void lblSideOption2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSideOption2MouseExited
        lblSideOption2.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_lblSideOption2MouseExited

    private void lblSideOption2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSideOption2MouseClicked
        Random rand = new Random();

//        Game randomGame = Controller.getController().steamAppList.applist.apps.get(rand.nextInt(Controller.getController().steamAppList.applist.apps.size()));
//        String randomGameId = randomGame.appid;
        
//        Controller.getController().setGameDataFromAPI(randomGameId);
        
//        if (Controller.getController().gameEntry.success) {
            Controller.getController().windows.get(Controller.getController().currentWindow).goToPage(Controller.ENTRY_WINDOW);
//        }
    }//GEN-LAST:event_lblSideOption2MouseClicked

    private void jtfSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) && (!jtfSearch.getText().equals(""))) {
//            controller.searchWindow.searchForEntriesInDatabase(jtfSearch.getText());
            Controller.getController().windows.get(Controller.getController().currentWindow).goToPage(Controller.SEARCH_WINDOW);
//            controller.searchWindow.setTitleLabel("Search Results:");
        }
    }//GEN-LAST:event_jtfSearchKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jtfSearch;
    private javax.swing.JLabel lblSideOption2;
    // End of variables declaration//GEN-END:variables
}
